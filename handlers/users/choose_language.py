from loader import dp
from aiogram.types import CallbackQuery, Message
from aiogram.dispatcher import FSMContext
from states.choose_language import ChooseLanguageStates
from utils.db_api.db_commands import database
from handlers.users.newsubscribe import newsubscribe


@dp.callback_query_handler(text_contains="lang_",
                           state=ChooseLanguageStates.Q1)
async def lang1(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ —á–µ—Ä–µ–∑ inline –∫–Ω–æ–ø–∫–∏.
    –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —é–∑–µ—Ä–µ –≤ –±–¥.
    –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ ChooseLanguageStates.Q1
    """
    await call.answer(cache_time=1)
    lang = call.data.split(':')[1]
    await database.update_user_lang(lang)
    if lang == "eng":
        text = "üá∫üá∏ Nice, you choose <b>English</b>!\n"
        await call.message.answer(text=text)
    else:
        text = "üá∑üá∫ –û—Ç–ª–∏—á–Ω–æ, –í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–†—É—Å—Å–∫–∏–π —è–∑—ã–∫</b>!\n"
        await call.message.answer(text=text)
    await state.finish()

    # –ú–æ–¥–µ–ª–∏—Ä—É–µ–º –Ω–∞–∂–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /newsubscribe
    await newsubscribe(call.message, state)


@dp.message_handler(state=ChooseLanguageStates.Q1)
async def lang2(message: Message, state: FSMContext):
    """
    –í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ inline –∫–Ω–æ–ø–∫–∏.
    –ï—Å–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç - –ø—Ä–æ—Å–∏–º –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å —è–∑—ã–∫–æ–º.
    """
    text = "üá∫üá∏ For English language, click on the button \"English\" ‚òù\n\n"
    text += "üá∑üá∫ –î–ª—è –≤—ã–±–æ—Ä–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–†—É—Å—Å–∫–∏–π\" ‚òù"
    await message.answer(text=text)
